{"version":3,"sources":["App.js","index.js"],"names":["App","cards","id","useState","gameReady","setGameReady","deck","setDeck","deckReady","setDeckReady","deckReshuffle","setDeckReshuffle","playerHand","setPlayerHand","dealerHand","setDealerHand","playerTotal","setPlayerTotal","dealerTotal","setDealerTotal","playerTurn","setPlayerTurn","dealerTurn","setDealerTurn","games","dealerWins","playerWins","ties","scoreboard","setScoreboad","showScoreboard","setShowScoreboard","useEffect","Deck","cardsContainer","document","getElementById","deckContainer","getElementsByClassName","mount","jokerDecks","i","spareDeck","forEach","card","unmount","splice","push","setTimeout","sort","fan","oplus","radius","numberOfPoints","theta","Math","PI","x","cos","y","sin","widthScaleConstant","window","innerWidth","heightScaleConstant","innerHeight","animateTitle","index","setSide","enableFlipping","enableDragging","animateTo","delay","duration","ease","array","indexArray","indexCard","shuffle","flip","style","position","transition","left","disableFlipping","disableDragging","blackjack","open","dealtCardsPlayer","dealtCardsDealer","prevHand","concat","gameOver","calcHand","hand","aces","total","reduce","acc","rank","hit","length","time","result","prev","getTime","Date","now","checkInterval","className","rel","href","onMouseDown","onMouseUp","a","stay","console","log","ReactDOM","render"],"mappings":"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","file":"static/js/main.a8239a27.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport Deck from \"../node_modules/deck-of-cards/lib/deck\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  let cards = <div id=\"container\"></div>; //Instantiate\r\n  const [gameReady, setGameReady] = useState(false);\r\n  const [deck, setDeck] = useState([]);\r\n  const [deckReady, setDeckReady] = useState(false);\r\n  const [deckReshuffle, setDeckReshuffle] = useState(false);\r\n  const [playerHand, setPlayerHand] = useState([]);\r\n  const [dealerHand, setDealerHand] = useState([]);\r\n  const [playerTotal, setPlayerTotal] = useState(0);\r\n  const [dealerTotal, setDealerTotal] = useState(0);\r\n  const [playerTurn, setPlayerTurn] = useState();\r\n  const [dealerTurn, setDealerTurn] = useState();\r\n  const [scoreboard, setScoreboad] = useState({\r\n    games: 0,\r\n    dealerWins: 0,\r\n    playerWins: 0,\r\n    ties: 0,\r\n  });\r\n  const [showScoreboard, setShowScoreboard] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Initialise Deck\r\n    setDeck(Deck());\r\n    setDeckReady(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Game Intro\r\n    if (!deckReady) return; // Waits for deck to be ready\r\n    let cardsContainer = document.getElementById(\"container\");\r\n    let deckContainer = document.getElementsByClassName(\"deck\");\r\n    deck.mount(cardsContainer);\r\n    const jokerDecks = [];\r\n    (() => {\r\n      for (let i = 0; i < 4; i++) {\r\n        let spareDeck = Deck(true);\r\n        spareDeck.cards.forEach((card) => card.unmount());\r\n        spareDeck.cards.splice(0, 52);\r\n        // removed.forEach((card) => card.unmount());\r\n        spareDeck.mount(cardsContainer);\r\n        jokerDecks.push(spareDeck);\r\n      }\r\n    })();\r\n\r\n    setTimeout(() => {\r\n      deck.sort();\r\n      setTimeout(() => {\r\n        deck.fan();\r\n        setTimeout(() => {\r\n          jokerDecks.forEach((deck) =>\r\n            deck.cards.forEach((card) => card.mount(cardsContainer))\r\n          );\r\n        }, 3000);\r\n      }, 1000);\r\n    }, 1000);\r\n\r\n    const oplus = [];\r\n\r\n    // o = straight circle\r\n    let radius = 0.1;\r\n    let numberOfPoints = 13;\r\n    let theta = (Math.PI * 2) / numberOfPoints;\r\n    for (let i = 1; i <= numberOfPoints; i++) {\r\n      const x = radius * Math.cos(theta * i) + 0.25;\r\n      const y = radius * Math.sin(theta * i) * 1.5;\r\n      oplus.push([x, y]);\r\n    }\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      oplus.push([0.45, 0.0 + i * 0.06]);\r\n    }\r\n    radius = 0.1;\r\n    numberOfPoints = 11;\r\n    theta = (Math.PI * 2) / numberOfPoints;\r\n    for (let i = 0; i <= 10; i++) {\r\n      if (i > 2 && i < 8) continue;\r\n      const x = (radius * Math.cos(theta * i) + 0.5) * 1;\r\n      const y = (radius * Math.sin(theta * i) + 0.0) * 1.5;\r\n      oplus.push([x, y]);\r\n    }\r\n\r\n    // l = straight line\r\n    for (let i = 0; i < 13; i++) {\r\n      oplus.push([0.7, -0.32 + i * 0.042]);\r\n    }\r\n\r\n    // u = semi-circle\r\n    radius = 0.1;\r\n    numberOfPoints = 24;\r\n    theta = (Math.PI * 2) / numberOfPoints;\r\n    for (let i = 0; i <= 12; i++) {\r\n      const x = (radius * Math.cos(theta * i) + 1.09) * 0.8;\r\n      const y = (radius * Math.sin(theta * i) - 0.045) * 2.5;\r\n      oplus.push([x, y]);\r\n    }\r\n\r\n    // s = two stretched semi-circles\r\n    radius = 0.1;\r\n    theta = (Math.PI * 2) / 17;\r\n    for (let i = 1; i <= 15; i++) {\r\n      if (i <= 4) {\r\n        const x = (radius * Math.cos(theta * i * 1.1) + 1.3) * 0.8;\r\n        const y = (radius * Math.sin(theta * i) + 0.005) * 1.5;\r\n        oplus.push([x, y]);\r\n      }\r\n      if (i >= 5 && i <= 12) {\r\n        const x = (radius * Math.cos(theta * i * 1.1) + 1.4) * 0.8;\r\n        const y = (radius * Math.sin(theta * i) - 0.045) * 1.5;\r\n        oplus.push([x, y]);\r\n      }\r\n    }\r\n\r\n    const delay = 5000;\r\n    const duration = 500;\r\n    const widthScaleConstant = window.innerWidth * 0.53;\r\n    const heightScaleConstant = window.innerHeight * 0.8;\r\n\r\n    const animateTitle = (card, index) => {\r\n      card.setSide(\"front\");\r\n      card.enableFlipping();\r\n      card.enableDragging();\r\n      card.animateTo({\r\n        delay: delay,\r\n        duration: duration,\r\n        ease: \"quartOut\",\r\n        x: oplus[index][0] * 1200 - widthScaleConstant,\r\n        y: oplus[index][1] * heightScaleConstant,\r\n      });\r\n    };\r\n\r\n    deck.cards.forEach((card, index) => {\r\n      animateTitle(card, index);\r\n    });\r\n\r\n    jokerDecks.forEach((array, indexArray) => {\r\n      array.cards.forEach((card, indexCard) => {\r\n        animateTitle(card, indexArray * 3 + indexCard + 52);\r\n      });\r\n    });\r\n\r\n    setTimeout(() => {\r\n      deck.shuffle();\r\n      jokerDecks.forEach((deck) => deck.shuffle());\r\n      setTimeout(() => {\r\n        jokerDecks.forEach((deck) =>\r\n          deck.cards.forEach((card) => card.unmount())\r\n        );\r\n        deck.flip();\r\n        deckContainer[0].style.position = \"absolute\";\r\n        deckContainer[0].style.transition = \"left 1s\";\r\n        deckContainer[0].style.left = \"0\";\r\n        setTimeout(() => {\r\n          deckContainer[0].style.left = \"343px\";\r\n          deck.cards.forEach((card) => {\r\n            card.setSide(\"back\");\r\n            card.disableFlipping();\r\n            card.disableDragging();\r\n          });\r\n          setTimeout(() => {\r\n            setGameReady(true);\r\n            setShowScoreboard(true);\r\n          }, 500);\r\n        }, 500);\r\n      }, 1000);\r\n    }, 7000);\r\n  }, [deckReady]);\r\n\r\n  useEffect(() => {\r\n    // Game Start\r\n    if (!gameReady) return;\r\n    deck.blackjack.open((dealtCardsPlayer) => {\r\n      deck.blackjack.open((dealtCardsDealer) => {\r\n        setDealerHand((prevHand) => prevHand.concat(dealtCardsDealer));\r\n        setPlayerHand((prevHand) => prevHand.concat(dealtCardsPlayer));\r\n        setPlayerTurn(true);\r\n      }, false);\r\n    }, true);\r\n  }, [gameReady]);\r\n\r\n  useEffect(() => {\r\n    if (!playerTurn) return;\r\n    if (playerTurn && playerTotal === 21)\r\n      return setTimeout(() => gameOver(\"win\"));\r\n  }, [playerTurn]);\r\n\r\n  const calcHand = (hand) => {\r\n    let aces = 0; // Ace counter\r\n    let total = hand.reduce((acc, card) => {\r\n      if (card.rank === 1) {\r\n        aces++;\r\n        return ++acc; // Increase by one if the card is an ace\r\n      } else if (card.rank > 10) {\r\n        return (acc += 10);\r\n      } else {\r\n        return (acc += card.rank); // Else by it's value\r\n      }\r\n    }, 0);\r\n    // Add ace bonuses as long as they don't result in bust\r\n    while (aces && total + 10 <= 21) {\r\n      total += 10;\r\n      aces--;\r\n    }\r\n    return total;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!dealerTurn) return;\r\n    if (dealerTotal >= 17) {\r\n      if (dealerTotal === 21) return gameOver(\"lose\");\r\n      if (dealerTotal === playerTotal) return gameOver();\r\n      if (dealerTotal < playerTotal) return gameOver(\"win\");\r\n      return gameOver(\"lose\");\r\n    }\r\n    setTimeout(\r\n      () => deck.blackjack.hit(setDealerHand, false, dealerHand),\r\n      2000\r\n    );\r\n  }, [dealerTurn]);\r\n\r\n  useEffect(\r\n    () => (playerHand.length ? setPlayerTotal(calcHand(playerHand)) : null),\r\n    [playerHand]\r\n  );\r\n  useEffect(\r\n    () => (dealerHand.length ? setDealerTotal(calcHand(dealerHand)) : null),\r\n    [dealerHand]\r\n  );\r\n  useEffect(\r\n    () =>\r\n      playerTotal\r\n        ? playerTotal > 21\r\n          ? gameOver(\"lose\")\r\n          : playerTotal === 21\r\n          ? gameOver(\"win\")\r\n          : null\r\n        : null,\r\n    [playerTotal]\r\n  );\r\n  useEffect(() => {\r\n    if (!dealerTurn) return;\r\n    if (dealerTotal > 21) return gameOver(\"win\");\r\n    if (dealerTotal === 21) return gameOver(\"lose\");\r\n    if (dealerTotal < 17)\r\n      return setTimeout(\r\n        () => deck.blackjack.hit(setDealerHand, false, dealerHand),\r\n        2000\r\n      );\r\n    if (dealerTotal === playerTotal) return gameOver();\r\n    if (dealerTotal < playerTotal) return gameOver(\"win\");\r\n    return gameOver(\"lose\");\r\n  }, [dealerTotal]);\r\n\r\n  const gameOver = (result) => {\r\n    setPlayerHand([]);\r\n    setDealerHand([]);\r\n    setPlayerTurn(false);\r\n    setDealerTurn(false);\r\n    setPlayerTotal(0);\r\n    setDealerTotal(0);\r\n    setGameReady(false);\r\n    setTimeout(() => {\r\n      deck.cards = deck.cards.concat(playerHand).concat(dealerHand);\r\n      deck.cards.forEach((card) => card.setSide(\"back\"));\r\n      setDeck(deck);\r\n      setDeckReshuffle(true);\r\n      setScoreboad((prev) => {\r\n        prev.games++;\r\n        prev[\r\n          result === \"win\"\r\n            ? \"playerWins\"\r\n            : result === \"lose\"\r\n            ? \"dealerWins\"\r\n            : \"ties\"\r\n        ]++;\r\n        return { ...prev };\r\n      });\r\n      setTimeout(() => setGameReady(true), 2000);\r\n    }, 2000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!deckReshuffle) return;\r\n    deck.shuffle();\r\n    setDeckReshuffle(false);\r\n  }, [deckReshuffle]);\r\n\r\n  let time;\r\n  const getTime = () => (time = Date.now());\r\n  const checkInterval = () => Date.now() - time > 200;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://deck-of-cards.js.org/example.css\"\r\n        />\r\n      </header>\r\n      {showScoreboard ? (\r\n        <div id=\"scoreboard\">\r\n          <div>Games: {scoreboard.games}</div>\r\n          <div>Wins: {scoreboard.playerWins}</div>\r\n          <div>Losses: {scoreboard.dealerWins}</div>\r\n          <div>Ties: {scoreboard.ties}</div>\r\n        </div>\r\n      ) : null}\r\n      {playerTurn ? (\r\n        <div id=\"choice\">\r\n          <button\r\n            className=\"big-button\"\r\n            onMouseDown={() => getTime()}\r\n            onMouseUp={async () => {\r\n              if (!checkInterval()) return (time = null);\r\n              deck.blackjack.hit(setPlayerHand, true, playerHand);\r\n              time = null;\r\n            }}\r\n          >\r\n            <span>Hit</span>\r\n          </button>\r\n          <button\r\n            className=\"big-button\"\r\n            onMouseDown={() => getTime()}\r\n            onMouseUp={() => {\r\n              if (!checkInterval()) return (time = null);\r\n              dealerHand.forEach((card, index) => {\r\n                card.blackjack.stay(() => console.log(\"done\"), index);\r\n              });\r\n              setPlayerTurn(false);\r\n              setDealerTurn(true);\r\n              time = null;\r\n            }}\r\n          >\r\n            <span>Stay</span>\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      {cards}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}